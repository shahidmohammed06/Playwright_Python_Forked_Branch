# coding: utf-8

"""
    Swagger Petstore

    This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.

    The version of the OpenAPI document: 1.0.7
    Contact: apiteam@swagger.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

import allure
from openapi_client.api.store_api import StoreApi

from utils.logger import logger


class TestStoreApi(unittest.TestCase):
    """StoreApi unit test stubs"""

    def setUp(self) -> None:
        self.api = StoreApi()

    def tearDown(self) -> None:
        pass

    def test_delete_order(self) -> None:
        """Test case for delete_order

        Delete purchase order by ID
        """
        pass

    def test_get_inventory(self) -> None:
        """Test case for get_inventory

        Returns pet inventories by status
        """
        pass

    def test_get_order_by_id(self) -> None:
        """Test case for get_order_by_id

        Find purchase order by ID
        """
        pass

    def test_place_order(self) -> None:
        """Test case for place_order

        Place an order for a pet
        """
        payload = {
            "petId": 0,
            "quantity": 0,
            "shipDate": "2024-11-04T10:54:36.704Z",
            "status": "placed",
            "complete": True
        }
        allure.attach(str(payload), "Request Body")
        response = self.api.place_order(payload, None, None, "applications/json", None)
        print("Response:", response)

        # Assertions to validate the response
        self.assertTrue(response, msg="Response should not be None")
        self.assertEqual(response.status, "placed", "Status should be placed")  # Check status code

        json_response = response.model_dump_json()
        allure.attach(str(json_response), "Response Body")
        logger.info("Create User API Response:\n{}".format(json_response))


if __name__ == '__main__':
    unittest.main()
